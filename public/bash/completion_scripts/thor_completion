#!/usr/bin/env ruby

class ThorCompletion
  
  def initialize(command)
    @command = command
  end
  
  def matches
    matching_tasks.map do |task|
      task.sub(typed_before_colon, '')
    end
  end
  
  private
  
  def typed
    @command[/\s(.+?)$/, 1] || ''
  end
  
  def typed_before_colon
    typed[/.+\:/] || ''
  end

  def matching_tasks
    all_tasks.select do |task|
      task[0, typed.length] == typed
    end
  end

  def all_tasks
    cache_current? ? targets_from_cache : generate_targets
  end
  
  def cache_current?
    File.exist?(cache_file)
  end
  
  def cache_file
    "#{ENV['HOME']}/.thor_tasks~"
  end
  
  def targets_from_cache
    IO.read(cache_file).split
  end
  
  def generate_targets
    targets = `thor list | grep "^thor"`.split("\n").collect { |line|
      line =~ /thor ([^#\[]+)/
      $1.strip 
    }
    File.open(cache_file, 'w') { |f| f.write targets.join("\n") }
    targets
  end
end

puts ThorCompletion.new(ENV["COMP_LINE"]).matches
exit 0
